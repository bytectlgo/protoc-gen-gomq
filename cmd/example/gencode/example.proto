
syntax = "proto3";

package example;

import "mq/mqtt.proto";

option go_package = "github.com/bytectlgo/protoc-gen-gomq/example;example";

service ExampleMQ {
    rpc DeviceInfo(DeviceInfoPulish) returns (DeviceInfoReply) {
        option (mq.mqtt) = {
            prefix : "$share/device/"
            topic : "/$SYS/brokers/:node/clients/:clientId/connected"
            reply_topic : "/$SYS/brokers/:node/clients/:clientId/connected_reply"
        };
    }
    rpc DeviceProperty(DevicePropertyulish) returns (DevicePropertyReply) {
        option (mq.mqtt) = {
            prefix : "$share/device/"
            topic : "/device/:device_id/property"
            reply_topic : "/device/:device_id/property_reply"
        };
    }
    // // 设备属性,事件上报
    // rpc EventPost(ThingReq) returns (Reply) {
    //     option (google.api.http) = {
    //         get : "$share/thing//sys/:appId/:productKey/:deviceKey/thing/event/:action/post"
    //     };
    // }

    // // 服务指令下发
    // rpc ServiceRequest(ThingReq) returns (Reply) {
    //     option (google.api.http) = {
    //         get : "$share/thing//device/:appId/:productKey/:deviceKey/thing/service/*action"
    //     };
    // }

    // // 服务指令回复
    // rpc ServiceReply(ThingReq) returns (Reply) {
    //     option (google.api.http) = {
    //         get : "$share/thing//sys/:appId/:productKey/:deviceKey/thing/service/*action"
    //     };
    // }
}

message DevicePropertyulish {
    string device_id = 1;
    string device_name = 2;
    string status = 3;
}

message DeviceInfoPulish {
    string device_id = 1;
    string device_name = 2;
}
message DeviceInfoReply {
    string code = 1;
    string msg = 2;
}

message DevicePropertyReply {
    string code = 1;
    string msg = 2;
}
